{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/blog/BlogPost.js","webpack:///./src/components/Masthead.js","webpack:///./src/components/NavigationSidebar.js","webpack:///./src/components/SidebarCheckbox.js","webpack:///./src/components/MainContainer.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/templates/BlogPage.js"],"names":["loader","enqueue","React","createContext","children","date","dangeroushtml","className","dangerouslySetInnerHTML","__html","data","to","title","props","href","htmlFor","type","id","NavigationSidebar","Masthead","SidebarCheckbox","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","post","markdownRemark","frontmatter","html","query"],"mappings":"2FAAA,sGAcyBA,QAAOC,QAELC,IAAMC,cAAc,K,kCChB/C,yBAEe,gBAAsC,IAApCC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,cAC7B,OAAQ,6BAASC,UAAU,QACtBH,EACD,0BAAMG,UAAU,aACZ,0BAAMA,UAAU,aAAaF,IAEjC,yBAAKG,wBAAyB,CAACC,OAAQH,Q,uECLhC,gBAAGI,KAAH,OACX,yBAAKH,UAAU,YACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,kBACV,kBAAC,IAAD,CAAMI,GAAG,IAAIC,MAAM,QAAnB,aACA,6ECLD,WAAAC,GAAK,OAAI,yBAAKN,UAAU,WACnC,yBAAKA,UAAU,eACX,yBAAKA,UAAU,gBAAe,sEAC9B,kBAAC,IAAD,CAAMA,UAAU,mBAAmBI,GAAG,WAAtC,UACA,kBAAC,IAAD,CAAMJ,UAAU,mBAAmBI,GAAG,aAAtC,YACA,kBAAC,IAAD,CAAMJ,UAAU,mBAAmBI,GAAG,SAAtC,QACA,0BAAMJ,UAAU,oBAAhB,eACA,uBAAGO,KAAK,iCAAiCP,UAAU,oBAAnD,UACA,uBAAGO,KAAK,kDAAkDP,UAAU,oBAApE,eCTO,WAAAM,GAAK,OAAI,2BAAOE,QAAQ,mBAAmBR,UAAU,oBCGrD,oBAAEH,EAAF,EAAEA,SAAF,OAAgB,yBAAKG,UAAU,iBAC1C,2BAAOS,KAAK,WAAWT,UAAU,mBAAmBU,GAAG,qBACvD,kBAACC,EAAD,MACA,yBAAKX,UAAU,QACX,kBAACY,EAAD,MACA,yBAAKZ,UAAU,qBACVH,IAGT,kBAACgB,EAAD,S,qBCdJ,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGE1B,IAAM2B,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV,O,kCCPX,8FAIe,sBAAa,IAClBC,EADiB,EAAVtB,KACKuB,eAClB,OACI,kBAAC,IAAD,KACI,wBAAI1B,UAAU,cAAcyB,EAAKE,YAAYtB,OAC7C,kBAAC,IAAD,CAAUN,cAAe0B,EAAKG,KAAM9B,KAAM2B,EAAKE,YAAY7B,SAKhE,IAAM+B,EAAK","file":"component---src-templates-blog-page-js-ca99c3692e432da2e5b6.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\";\r\n\r\nexport default ({children, date, dangeroushtml}) => {\r\n    return (<article className=\"post\">\r\n        {children}\r\n        <span className=\"post-meta\">\r\n            <span className=\"post-date\">{date}</span>\r\n        </span>\r\n        <div dangerouslySetInnerHTML={{__html: dangeroushtml }} />\r\n    </article>)\r\n}","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nexport default ({ data }) => (\r\n    <div className=\"masthead\">\r\n        <div className=\"container\">\r\n            <h3 className=\"masthead-title\">\r\n                <Link to=\"/\" title=\"Home\">Tommy Lee</Link>\r\n                <small>Software development for everyone else</small>\r\n            </h3>\r\n    </div>\r\n</div>\r\n)","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nexport default props => <div className=\"sidebar\">\r\n    <nav className=\"sidebar-nav\">\r\n        <div className=\"sidebar-item\"><p>Software development for Everyone else</p></div>\r\n        <Link className=\"sidebar-nav-item\" to=\"/resume\">Resume</Link>\r\n        <Link className=\"sidebar-nav-item\" to=\"/projects\">Projects</Link>\r\n        <Link className=\"sidebar-nav-item\" to=\"/blog\">Blog</Link>\r\n        <span className=\"sidebar-nav-item\">Outer Links</span>\r\n        <a href=\"https://github.com/tomcentrate\" className=\"sidebar-nav-item\">Github</a>\r\n        <a href=\"https://www.linkedin.com/in/tommy-lee-a23ba935/\" className=\"sidebar-nav-item\">LinkedIn</a>\r\n    </nav>\r\n</div>","import React from \"react\";\r\n\r\nexport default props => <label htmlFor=\"sidebar-checkbox\" className=\"sidebar-toggle\" />","import React from \"react\";\r\nimport Masthead from \"./Masthead\";\r\nimport NavigationSidebar from \"./NavigationSidebar\";\r\nimport SidebarCheckbox from \"./SidebarCheckbox\"\r\n\r\nexport default ({children}) => <div className=\"mainContainer\">\r\n    <input type=\"checkbox\" className=\"sidebar-checkbox\" id=\"sidebar-checkbox\" />\r\n    <NavigationSidebar />\r\n    <div className=\"wrap\">\r\n        <Masthead/>\r\n        <div className=\"container content\">\r\n            {children}\r\n        </div>\r\n    </div>\r\n    <SidebarCheckbox/>\r\n</div>","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\r\nimport { graphql } from \"gatsby\"\r\nimport MainContainer from \"../components/MainContainer\";\r\nimport BlogPost from \"../components/blog/BlogPost\";\r\nexport default ({data}) => {\r\n    const post = data.markdownRemark\r\n    return (\r\n        <MainContainer>\r\n            <h1 className=\"post-title\">{post.frontmatter.title}</h1>\r\n            <BlogPost dangeroushtml={post.html} date={post.frontmatter.date} />\r\n        </MainContainer>\r\n    )\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"DD MMMM, YYYY\")\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}