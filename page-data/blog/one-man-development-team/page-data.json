{"componentChunkName":"component---src-templates-blog-page-js","path":"/blog/one-man-development-team/","result":{"data":{"markdownRemark":{"html":"<p>I recently picked up a small project over the weekend. With the promise to myself to launch an MVP by week's end, I needed to have a solid system down that worked well enough.</p>\n<p>It is a customer rewards tracking system, so that a business can keep track of customer purchases, and offer discounts at time of purchase. This is meant to replace their current Access database.</p>\n<h2>Organizing Thoughts</h2>\n<p>Tickets and feature management is a must. I've tried other ticketing systems, and I wanted a little more integration with Github or Bitbucket. From a recommendation from my coworker <a href=\"http://tbash.co\">Brandon</a>, <a href=\"http://waffle.io\">waffle.io</a> has been a very good choice. Tickets integrated well with Github issues, features, and pull requests. Progress of the ticket was tracked as I pushed changes to feature branches.</p>\n<p>Some required features to emulate the current system:</p>\n<ul>\n<li>Cashier Login</li>\n<li>Cashier can add a new customer into system</li>\n<li>Cashier can add a visit and add a new reward</li>\n<li>A report to determine when customers at the month are</li>\n</ul>\n<p>Some new features requested:</p>\n<ul>\n<li>Rewards to show up at intervals of dollars spent</li>\n<li>Rewards for frequency of visits</li>\n<li>Alerting the cashier at time of entry about the available deal.</li>\n</ul>\n<h2>Make sure it works</h2>\n<p>Since this is a part time project, I need to make sure that it's functional enough for people to use. While I'm doing some things from a TDD perspective, I didn't want to spend too much time debugging launches.</p>\n<p>After enough listens to the <a href=\"http://5by5.tv/rubyonrails\">Ruby on Rails Podcasts</a>, I checked out <a href=\"http://codeship.com\">Codeship's continous deployment service</a> to keep my application recent and working. It's a change in pace to how I've been doing my projects.</p>\n<p>There were some growing pains setting up Capistrano to deploy on my own servers.  I wrote up some steps and left it in my project's readmes. Overall I'm pretty satisfied on how it works.</p>\n<h2>Keeping it small and tight.</h2>\n<p>I don't want to mess around with small details, like User Authentication and Authorization. Using gems like CanCanCan and Devise speed up my creation process.</p>\n<p>For the front-end sections, I'm looking to find a better way to build interfaces. Right now I'm just grabbing Javascript plugins for search boxes and autocompletes, and its working out okay for an MVP.</p>","frontmatter":{"title":"One Man Development Team","date":"08 September, 2015"}}},"pageContext":{"slug":"/blog/one-man-development-team/"}},"staticQueryHashes":[]}